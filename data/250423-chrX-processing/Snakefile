CHRX = '/data/data_vault/smedina/results/chromosome-x/250422-raw-vcfs/tgp_chrX.vcf.gz'
SCRATCH = '/home/smedina/scratch/250423-chrx-processing'
POPTABLE = '../250320-1tgp/data/popinfo.txt'

rule all:
    input:
        diploid_vcf=f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf"

rule vcf_to_plink:
    input:
        vcf=CHRX
    output:
        bed=f"{SCRATCH}/chrX_raw.bed",
        bim=f"{SCRATCH}/chrX_raw.bim",
        fam=f"{SCRATCH}/chrX_raw.fam"
    shell:
        """
        plink1.9 --vcf {input.vcf} --make-bed --out {SCRATCH}/chrX_raw
        """

rule make_update:
    input:
        popinfo=POPTABLE
    output:
        sex_update=f"{SCRATCH}/sex_update.txt"
    shell:
        """
        awk '{{ if ($4 == "male") sex=1; else if ($4 == "female") sex=2; else sex=0; print $1, $1, sex }}' {input.popinfo} > {output.sex_update}
        """

rule update_sex:
    input:
        bed=f"{SCRATCH}/chrX_raw.bed",
        bim=f"{SCRATCH}/chrX_raw.bim",
        fam=f"{SCRATCH}/chrX_raw.fam",
        sex_update=f"{SCRATCH}/sex_update.txt"
    output:
        bed=f"{SCRATCH}/chrX_sexed.bed",
        bim=f"{SCRATCH}/chrX_sexed.bim",
        fam=f"{SCRATCH}/chrX_sexed.fam"
    shell:
        """
        plink --bfile {SCRATCH}/chrX_raw \
              --update-sex {input.sex_update} \
              --make-bed \
              --out {SCRATCH}/chrX_sexed
        """


rule split_x:
    input:
        bed=f"{SCRATCH}/chrX_sexed.bed",
        bim=f"{SCRATCH}/chrX_sexed.bim",
        fam=f"{SCRATCH}/chrX_sexed.fam"
    output:
        bed=f"{SCRATCH}/chrX_split.bed",
        bim=f"{SCRATCH}/chrX_split.bim",
        fam=f"{SCRATCH}/chrX_split.fam"
    shell:
        """
        plink --bfile {SCRATCH}/chrX_sexed \
              --split-x hg38 \
              --make-bed \
              --out {SCRATCH}/chrX_split
        """


rule males_vcf:
    input:
        fam=f"{SCRATCH}/chrX_split.fam",
        bfile_prefix=f"{SCRATCH}/chrX_split"
    output:
        samples=f"{SCRATCH}/male_samples.txt",
        vcf=f"{SCRATCH}/chrX_nonPAR_males.vcf"
    shell:
        """
        awk '$5 == 1 {{print $1, $2}}' {input.fam} > {output.samples}
        
        plink \
          --bfile {input.bfile_prefix} \
          --chr 23 \
          --keep {output.samples} \
          --recode vcf-iid \
          --out {SCRATCH}/chrX_nonPAR_males
        """


rule make_males_diploid:
    input:
        vcf=f"{SCRATCH}/chrX_nonPAR_males.vcf"
    output:
        diploid_vcf=f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf"
    log:
        f"{SCRATCH}/logs/make_males_diploid.log"
    shell:
        """
        python scripts/convert_chromosome_X.py {input.vcf} {output.diploid_vcf} > {log} 2>&1
        """



rule extract_female_chrX_nonPAR:
    """
    ðŸ§¬ Option 2: Re-extract chrX non-PAR region for females directly from the original phased VCF.
    This ensures that phasing is preserved, which is important for analyses that rely on haplotype structure.
    """
    input:
        vcf="/data/data_vault/smedina/results/chromosome-x/250422-raw-vcfs/tgp_chrX.vcf.gz",
        samples="female_samples.txt"
    output:
        vcf="results/chrX_nonPAR_females_phased.vcf.gz"
    shell:
        """
        bcftools view \
            --samples-file {input.samples} \
            --regions chrX:2781479-155701383 \
            --output-type z \
            --output {output.vcf} \
            {input.vcf}
        """

