CHRX = '/data/data_vault/smedina/results/chromosome-x/250422-raw-vcfs/tgp_chrX.vcf.gz'
SCRATCH = '/home/smedina/scratch/250423-chrx-processing'
POPTABLE = '../250320-1tgp/data/popinfo.txt'

rule all:
    input:
        merged=f"{SCRATCH}/chrX_nonPAR_merged.vcf.gz"

rule vcf_to_plink:
    input:
        vcf=CHRX
    output:
        bed=f"{SCRATCH}/chrX_raw.bed",
        bim=f"{SCRATCH}/chrX_raw.bim",
        fam=f"{SCRATCH}/chrX_raw.fam"
    shell:
        """
        plink1.9 --vcf {input.vcf} --make-bed --out {SCRATCH}/chrX_raw
        """

rule make_update:
    input:
        popinfo=POPTABLE
    output:
        sex_update=f"{SCRATCH}/sex_update.txt"
    shell:
        """
        awk '{{ if ($4 == "male") sex=1; else if ($4 == "female") sex=2; else sex=0; print $1, $1, sex }}' {input.popinfo} > {output.sex_update}
        """

rule update_sex:
    input:
        bed=f"{SCRATCH}/chrX_raw.bed",
        bim=f"{SCRATCH}/chrX_raw.bim",
        fam=f"{SCRATCH}/chrX_raw.fam",
        sex_update=f"{SCRATCH}/sex_update.txt"
    output:
        bed=f"{SCRATCH}/chrX_sexed.bed",
        bim=f"{SCRATCH}/chrX_sexed.bim",
        fam=f"{SCRATCH}/chrX_sexed.fam"
    shell:
        """
        plink1.9 --bfile {SCRATCH}/chrX_raw \
              --update-sex {input.sex_update} \
              --make-bed \
              --out {SCRATCH}/chrX_sexed
        """


rule split_x:
    input:
        bed=f"{SCRATCH}/chrX_sexed.bed",
        bim=f"{SCRATCH}/chrX_sexed.bim",
        fam=f"{SCRATCH}/chrX_sexed.fam"
    output:
        bed=f"{SCRATCH}/chrX_split.bed",
        bim=f"{SCRATCH}/chrX_split.bim",
        fam=f"{SCRATCH}/chrX_split.fam"
    shell:
        """
        plink1.9 --bfile {SCRATCH}/chrX_sexed \
              --split-x hg38 \
              --make-bed \
              --out {SCRATCH}/chrX_split
        """


rule males_vcf:
    input:
        fam=f"{SCRATCH}/chrX_split.fam"
    output:
        samples=f"{SCRATCH}/male_samples.txt",
        vcf=f"{SCRATCH}/chrX_nonPAR_males.vcf"
    params:
        bfile_prefix=f"{SCRATCH}/chrX_split"
    shell:
        """
        awk '$5 == 1 {{print $1, $2}}' {input.fam} > {output.samples}
        
        plink1.9 \
          --bfile {params.bfile_prefix} \
          --chr 23 \
          --keep {output.samples} \
          --recode vcf-iid \
          --out {SCRATCH}/chrX_nonPAR_males
        """




rule make_males_diploid:
    input:
        vcf=f"{SCRATCH}/chrX_nonPAR_males.vcf"
    output:
        diploid_vcf=f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf"
    log:
        f"{SCRATCH}/logs/make_males_diploid.log"
    shell:
        """
        python scripts/convert_chromosome_X.py {input.vcf} {output.diploid_vcf} > {log} 2>&1
        """

rule males_index_vcf:
    input:
        f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf"
    output:
        vcf=f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf.gz",
        index=f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf.gz.tbi"
    shell:
        """
        bcftools view {input} -W=tbi -Oz -o {output[0]}
        """

rule females_vcf_unphased:
    """
    Generate an unphased chrX VCF for females using PLINK.
    This VCF is only used to get the correct sample list to extract phased data from the original VCF.
    converting to plink1.9 looses phasing information
    """
    input:
        fam=f"{SCRATCH}/chrX_split.fam",
    output:
        samples=f"{SCRATCH}/female_samples.txt",
        vcf=f"{SCRATCH}/chrX_nonPAR_females_unphased.vcf"
    params:
        bfile_prefix=f"{SCRATCH}/chrX_split"
    shell:
        """
        # Extract female sample list from PLINK .fam
        awk '$5 == 2 {{print $1, $2}}' {input.fam} > {output.samples}

        # Export unphased chrX VCF from PLINK (chr 23 is chrX)
        plink1.9 \
          --bfile {params.bfile_prefix} \
          --chr 23 \
          --keep {output.samples} \
          --recode vcf-iid \
          --out {SCRATCH}/chrX_nonPAR_females_unphased

        """


rule extract_phased_females_from_original:
    """
    Re-extract chrX non-PAR region for female samples from the original phased VCF.
    Uses the unphased VCF to define both sample list and sites to keep (ensures exact matching and preserves phasing).
    """
    input:
        phased_vcf="/data/data_vault/smedina/results/chromosome-x/250422-raw-vcfs/tgp_chrX.vcf.gz",
        unphased_vcf=f"{SCRATCH}/chrX_nonPAR_females_unphased.vcf",
        samples=f"{SCRATCH}/female_samples.txt"
    output:
        vcf=f"{SCRATCH}/chrX_nonPAR_females_phased.vcf.gz",
        index=f"{SCRATCH}/chrX_nonPAR_females_phased.vcf.gz.tbi"
    shell:
        """
        cut -f1 -d ' ' {input.samples} >females.tmp
        bcftools view \
            --samples-file females.tmp \
            --regions-file {input.unphased_vcf} \
            -W=tbi \
            --output-type z \
            --output {output.vcf} \
            {input.phased_vcf}

        rm females.tmp
        """


rule merge_female_male_chrX:
    """
    Merge diploid chrX non-PAR VCFs from phased females and converted diploid males.
    This creates a unified VCF with all samples for downstream population-level analysis.
    """
    input:
        females=f"{SCRATCH}/chrX_nonPAR_females_phased.vcf.gz",
        males=f"{SCRATCH}/chrX_nonPAR_males_diploid.vcf.gz"
    output:
        merged=f"{SCRATCH}/chrX_nonPAR_merged.vcf.gz"
    shell:
        """
        bcftools merge \
            --output-type z \
            --output {output.merged} \
            {input.females} {input.males}
        """

